taint/Annotations.kt, codetoanalyze.kotlin.pulse.Annotations.markedSourceToMarkedSinkBad():void, 1, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from String Annotations.markedSource() with kind Simple,passed as argument #1 to void Annotations.markedSink(String) with kind Simple]
taint/Annotations.kt, codetoanalyze.kotlin.pulse.Annotations.markedSourceUsingUnmarkedSanitizerToMarkedSinkBad():void, 1, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from String Annotations.markedSource() with kind Simple,passed as argument #1 to void Annotations.markedSink(String) with kind Simple]
taint/Arrays.kt, codetoanalyze.kotlin.pulse.Arrays.viaArrayBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Arrays.kt, codetoanalyze.kotlin.pulse.Arrays.viaArrayThenFieldBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Arrays.kt, codetoanalyze.kotlin.pulse.Arrays.viaFieldThenArrayBad1(codetoanalyze.kotlin.pulse.Arrays$Obj):void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Arrays.kt, codetoanalyze.kotlin.pulse.Arrays.viaFieldThenArrayBad2():void, 4, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.directBad():void, 1, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.viaVarBad1():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.viaVarBad2():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.viaVarBad3():void, 4, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.viaCastBad1():void, 1, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.viaCastBad2():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.ifBad1(boolean):void, 5, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.ifBad2(boolean):void, 5, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.ifBad3(boolean):void, 7, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.ifBad4(boolean,boolean):void, 9, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.ifBad5(boolean):void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.switchBad1(int):void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.switchBad2(int):void, 4, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.whileBad1(int):void, 4, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.whileBad2(int):void, 7, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.noTripleReportBad():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.noTripleReportBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.arrayWithTaintedContentsBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.funCallBad():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,when calling `void Basics.passToSinkOk(int,Object)` here,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.taintedBasedOnClassNameRegexBad():void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaintSinks.sink1(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.taintedBasedOnClassNameRegexBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from Object InferTaint.inferSecretSource() with kind Simple,passed as argument #1 to void InferTaintSinks.sink2(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.taintedFromInferBaseSourceBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from String InferBaseSource.inferBaseSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.taintedFromInferChildSourceBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from String InferChildSource.inferChildSecretSource() with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics.firstParameterTainted(java.lang.Object,java.lang.Object):void, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to void Basics.firstParameterTainted(Object,Object) with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics$callbackAnonymousClassTaintedBad$1.onCompletion(java.lang.Object):void, 1, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to void Basics$callbackAnonymousClassTaintedBad$1.onCompletion(Object) with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Basics.kt, codetoanalyze.kotlin.pulse.Basics$Lambda$_5_3.onCompletion(java.lang.Object):void, 7, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to void Basics$Lambda$_5_3.onCompletion(Object) with kind Simple,when calling `void Basics.access_codetoanalyze.kotlin.pulse.Basics$Lambda$_5_3(Object)` here,when calling `void Basics.callbackLambdaTaintedBad$lambda$1(Object)` here,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
taint/Constants.kt, codetoanalyze.kotlin.pulse.Constants.nonLiteralTaintedBad():void, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to void Constants.source(Object) with kind Simple,passed as argument #1 to void InferTaint.inferSensitiveSink(Object) with kind Simple]
