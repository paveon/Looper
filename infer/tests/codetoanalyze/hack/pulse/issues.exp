cross_file_taint_flow.hack, $root.directCrossFileFlowBad, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from OuterFile$static.taintSource with kind Simple,passed as argument #1 to OuterFile$static.taintSink with kind Simple]
cross_file_taint_flow.hack, $root.indirectCrossFileFlowBad, 2, TAINT_ERROR, no_bucket, ERROR, [in call to `OuterFile$static.tainted`,source of the taint here: value returned from OuterFile$static.taintSource with kind Simple,return from call to `OuterFile$static.tainted`,passed as argument #1 to OuterFile$static.taintSink with kind Simple]
intra_file_flow.hack, IntraFileFlow.explicitSinkMethodDirectBad, 0, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow.explicitSinkMethodDirectBad with kind Simple,when calling `IntraFileFlow$static.explicitSinkMethodDirectBad` here,passed as argument #1 to UnknownClass$static.explicitSinkAllArgs with kind Simple]
intra_file_flow.hack, IntraFileFlow$static.explicitSinkMethodDirectBad, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow$static.explicitSinkMethodDirectBad with kind Simple,passed as argument #1 to UnknownClass$static.explicitSinkAllArgs with kind Simple]
intra_file_flow.hack, IntraFileFlow.explicitSinkMethodDerivedBad, 0, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow.explicitSinkMethodDerivedBad with kind Simple,when calling `IntraFileFlow$static.explicitSinkMethodDerivedBad` here,passed as argument #1 to UnknownClass$static.explicitSinkAllArgs with kind Simple]
intra_file_flow.hack, IntraFileFlow$static.explicitSinkMethodDerivedBad, 5, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow$static.explicitSinkMethodDerivedBad with kind Simple,in call to function `SensitiveClass.getDerived` with no summary,passed as argument #1 to UnknownClass$static.explicitSinkAllArgs with kind Simple]
intra_file_flow.hack, IntraFileFlow.explicitSinkMethodDerivedDynamicBad, 7, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow.explicitSinkMethodDerivedDynamicBad with kind Simple,in call to function `SensitiveClass.getDerived` with no summary,when calling `IntraFileFlow.callExplicitSinkAllArgs` here,passed as argument #1 to UnknownClass$static.explicitSinkAllArgs with kind Simple]
intra_file_flow.hack, IntraFileFlow.explicitSinkClassDirectBad, 0, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow.explicitSinkClassDirectBad with kind Simple,when calling `IntraFileFlow$static.explicitSinkClassDirectBad` here,passed as argument #1 to Logger$static.someLogMethod with kind Simple]
intra_file_flow.hack, IntraFileFlow$static.explicitSinkClassDirectBad, 3, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: passed as argument #1 to IntraFileFlow$static.explicitSinkClassDirectBad with kind Simple,passed as argument #1 to Logger$static.someLogMethod with kind Simple]
level1.hack, $root.basicFlowBad, 2, TAINT_ERROR, no_bucket, ERROR, [source of the taint here: value returned from $root.taintSource with kind Simple,passed as argument #1 to $root.taintSink with kind Simple]
